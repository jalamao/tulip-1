<chapter id="functions"><title>Functionalities</title>
    <sect1 id="manag-graphs"><title>Management of Graphs</title>
        <para>Tulip software offers a way to create and manage graphs. The main window enables to have several 3D views to show differents graphs. The menu bar enables the user to create a new view. In there and with the mouse toolbar, the users can create nodes and edges at the place where the pointer is. When you have a graph and you want to keep traces of the graph, you can save it in the <filename>.tlp</filename> format, of Tulip Software. An other option is to export it in the <filename>GML</filename> format, for the <application>graphlet</application> system, a toolkit for graph editors and graph algorithms. Then, you can save as an picture the result you had. Tulip supports different formats : BMP, EPS, JPEG, PBM, PGM, PNG, PPM, SVG, XBM, XPM. </para>
        <para>
        Tulip could generate a graph from data : importation.
        <itemizedlist><title>Examples of importation</title>
        <listitem><para>Adjacency Matrix : a form of representation of graphs.</para></listitem>
        <listitem><para>File System : make a graph with your file system ; the root is the directory you have selected.</para></listitem>
        <listitem><para>GML import : create a graph from this other format.</para></listitem>
        <listitem><para>dot : create a graph from <emphasis>graphviz</emphasis>format.</para></listitem>
        </itemizedlist>
        The second possibility is to generate automatically different kinds of graph : Graph, Tree, Grid, which could be complete, simple, uniform, ...
        <itemizedlist><title>Examples of generation</title>
        <listitem><para>Complete General Graph</para></listitem>
        <listitem><para>Complete Tree</para></listitem>
        <listitem><para>Grid</para></listitem>
        <listitem><para>Grid approximation</para></listitem>
        <listitem><para>Random General Graph</para></listitem>
        <listitem><para>Random Simple Graph</para></listitem>
        <listitem><para>Uniform Random Binary Tree</para></listitem>
        </itemizedlist>
        </para>

        <para>It is posssible to do a <quote>Copy-Paste</quote>. Indeed, you can cut, copy and paste selected elements from a view. When you paste an element, there are in the same place of the oldest of the view. The menus and the mouse toolbar allow you to select the operation you want to perform on the selection.</para>
        <sect2 id="find"><title>The <quote>Find</quote> tool</title>
            <para>In the <code>Edit</code> menu, it exists a <code>Find</code> item allowing to do some requests on the current graph. The tool gives a way to choose the desired property and the action you want to do : Make copy of the found elements, Add to the selection, Remove from the selection or Intersect with the current selection.</para>
        </sect2>
    </sect1>
    <sect1 id="algo"><title>Algorithms</title>
		&Algorithms;
    </sect1>
    <sect1 id="graph-properties"><title>Properties of graph</title>
        <para>In <application>Tulip</application>, there is a way to assign properties to each node or edge of the graph. <application>Tulip</application> defines two kinds of property : intrinsic and extrinsic. The first represents the properties computed relatively to the structure of graphs. But it is possible to assign nodes values to the nodes or the edges that are not related to the structure. For example, if we build the map of a region and the nodes represent the towns, the label property can be used for the name of town. But it is not possible to determine the name with the structure of the graph; this kind of property is extrinsic.</para>

        <para>For each graph, <application>Tulip</application> provides a set of properties used by the renderer engine ; all begin with the <quote>view</quote> prefix by convention : viewColor, viewLabel, viewLayout, viewMetaGraph, viewRotation, viewSelection, viewShape, viewSize, viewTexture. They are updated during the computation phase of the plugins. In the other hand, it is possible to define properties to store informations relative to the graph. The number of this created properties are not limited. 
        </para>
	<sect2 id="list-properties"><title>List of Properties</title>
	<para> Following is a list of properties :</para>
	<itemizedlist>
		<listitem><code>viewBorderColor :</code>
			Color of the border of an edge or a node.
		</listitem>
		<listitem><code>viewBorderWidth :</code>
			Width of the border of an edge or a node.
		</listitem>
		<listitem><code>viewColor :</code>
			Color of an edge or a node.
		</listitem>
		<listitem><code>viewLabel :</code>
			Label of an edge or a node.
		</listitem>
		<listitem><code>viewLabelColor :</code>
			Color label of an edge or a node.
		</listitem>
		<listitem><code>viewLabelPosition :</code>
			Label position (x,y,z) of an edge or a node.
		</listitem>
		<listitem><code>viewLayout :</code>
			Position (x,y,z) of an edge or a node.
		</listitem>
		<listitem><code>viewMetric :</code>
			Metric is the result value of an measure ( <xref linkend="Measure" /> ) algorithm.
		</listitem>
		<listitem><code>viewRotation :</code>
			Rotation (0 to 360) of a node  or an edge
		</listitem>
		<listitem><code>viewSelection :</code>
			Selection equals true if the node or edge is selected. False if it is not.
		</listitem>
		<listitem><code>viewShape :</code>
			Shape of a node or a graph.
		</listitem>
		<listitem><code>viewSize :</code>
			Size (height, width, depth) of a node or an edge.
		</listitem>
		<listitem><code>viewTexture :</code>
			Texture will replace the color background of the node.
		</listitem>
	</itemizedlist>
	</sect2>
	<sect2 id="create-property"><title>Creating a new Property</title>
		<para> 1. In the info editor, click New.</para>
		<para> 2. Select a type of property. </para>
		<para> 3. Name your new property.</para>
	</sect2>
    </sect1>
     <sect1 id="hierarchy"><title>Hierachy</title>
		&Subgraphs;
    </sect1>
    <sect1 id="stats-panels"><title>Statistics Panel (not available in standard version)</title>
        <para><application>Tulip</application> also provides a simple statistics interface which allows the user to compute Histograms, Scatter Plots, Augmented Displays and Clustering. The computation of Histogram and Scatter Plot depends on a number for metrics, chosen by the user (from 1 to 3), and a discretization step (one given per metric). Finally, the clustering is performed from a clustering plane, specified by the user with a plane equation.</para>
    </sect1>
    <sect1 id="text-rend"><title>Text Rendering</title>
        <para>It is possible to assign a label to each element of the graph. <application>Tulip</application> can display them with three methods : 3D and texture for node labels, bitmap for node and edge labels. 
        <figure>
            <title>Bitmap Rendering</title>
            <graphic fileref="images/bitmap-label.png"/>
        </figure>
        <figure>
            <title>3D Rendering</title>
            <graphic fileref="images/3d-label.png"/>
        </figure>
        <figure>
            <title>Texture Rendering</title>
            <graphic fileref="images/text-label.png"/>
        </figure>
        </para>
        <para>In a future version of Tulip, It will be possible to create labels with XML tags like the HTML rendering. Some tags will be available in order to allow the user to organize the content of the labels.</para>
    </sect1>
</chapter>
